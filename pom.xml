<?xml version="1.0" encoding="UTF-8"?>

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.nuti.puccia</groupId>
    <artifactId>ATTSWProject</artifactId>
    <version>1.0-SNAPSHOT</version>

    <name>Project for ATTSW exam</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <hibernate.version>5.4.16.Final</hibernate.version>
        <hibernate.c3po.version>5.4.16.Final</hibernate.c3po.version>
        <picocli.version>4.3.2</picocli.version>
        <mysql.version>8.0.20</mysql.version>
        <slf4j.version>1.7.30</slf4j.version>
        <intellij.version>7.0.3</intellij.version>

        <junit.version>4.13</junit.version>
        <assertj.version>3.16.1</assertj.version>
        <assertj.swing.version>3.9.2</assertj.swing.version>
        <mockito.version>3.3.3</mockito.version>
        <jbehave.version>4.6.3</jbehave.version>
        <awaitility.version>4.0.2</awaitility.version>

        <!-- Sonar rules -->
        <sonar.issue.ignore.multicriteria>e11,e12,e13,e14,e15,e16</sonar.issue.ignore.multicriteria>
        <!-- Disable rule for "Inheritance tree of classes should not be too deep" -->
        <sonar.issue.ignore.multicriteria.e11.ruleKey>
            java:S110
        </sonar.issue.ignore.multicriteria.e11.ruleKey>
        <sonar.issue.ignore.multicriteria.e11.resourceKey>
            **/view/swing/*
        </sonar.issue.ignore.multicriteria.e11.resourceKey>
        <!-- Disable rule for "Method names should comply with a naming convention" -->
        <sonar.issue.ignore.multicriteria.e12.ruleKey>
            java:S100
        </sonar.issue.ignore.multicriteria.e12.ruleKey>
        <sonar.issue.ignore.multicriteria.e12.resourceKey>
            **/view/swing/*
        </sonar.issue.ignore.multicriteria.e12.resourceKey>
        <!-- Disable rule for "Only static class initializers should be used" -->
        <sonar.issue.ignore.multicriteria.e13.ruleKey>
            java:S1171
        </sonar.issue.ignore.multicriteria.e13.ruleKey>
        <sonar.issue.ignore.multicriteria.e13.resourceKey>
            **/view/swing/*
        </sonar.issue.ignore.multicriteria.e13.resourceKey>
        <!-- Disable rule for "Raw types should not be used" -->
        <sonar.issue.ignore.multicriteria.e14.ruleKey>
            java:S3740
        </sonar.issue.ignore.multicriteria.e14.ruleKey>
        <sonar.issue.ignore.multicriteria.e14.resourceKey>
            **/view/swing/*
        </sonar.issue.ignore.multicriteria.e14.resourceKey>
        <!-- Disable rule for "String literals should not be duplicated" -->
        <sonar.issue.ignore.multicriteria.e15.ruleKey>
            java:S1192
        </sonar.issue.ignore.multicriteria.e15.ruleKey>
        <sonar.issue.ignore.multicriteria.e15.resourceKey>
            **/view/swing/*
        </sonar.issue.ignore.multicriteria.e15.resourceKey>
        <!-- Disable rule for "String literals should not be duplicated" -->
        <sonar.issue.ignore.multicriteria.e16.ruleKey>
            java:S4823
        </sonar.issue.ignore.multicriteria.e16.ruleKey>
        <sonar.issue.ignore.multicriteria.e16.resourceKey>
            **/App.java
        </sonar.issue.ignore.multicriteria.e16.resourceKey>

        <sonar.coverage.exclusions>
            **/Student.*,
            **/App.*
        </sonar.coverage.exclusions>
    </properties>


    <dependencies>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate.version}</version>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-c3p0</artifactId>
            <version>${hibernate.c3po.version}</version>
        </dependency>

        <dependency>
            <groupId>info.picocli</groupId>
            <artifactId>picocli</artifactId>
            <version>${picocli.version}</version>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>com.intellij</groupId>
            <artifactId>forms_rt</artifactId>
            <version>${intellij.version}</version>
        </dependency>


        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-swing-junit</artifactId>
            <version>${assertj.swing.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jbehave</groupId>
            <artifactId>jbehave-core</artifactId>
            <version>${jbehave.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>${awaitility.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <!-- Sonar cloud-->
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>3.7.0.1746</version>
            </plugin>

            <!-- Integration Test-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.22.1</version>
                <executions>
                    <execution>
                        <id>Integrations</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>**/*IT.java</include>
                            </includes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>BDD</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>**/*BDD.java</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Code Coverage -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.5</version>
                <configuration>
                    <excludes>
                        <exclude>**/Student.*</exclude>
                        <exclude>**/App.*</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Coveralls -->
            <plugin>
                <groupId>org.eluder.coveralls</groupId>
                <artifactId>coveralls-maven-plugin</artifactId>
                <version>4.2.0</version>
            </plugin>
            <!-- Mutation Test -->
            <plugin>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-maven</artifactId>
                <version>1.4.10</version>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>mutationCoverage</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <targetClasses>
                        <param>${project.groupId}.*.*</param>
                    </targetClasses>
                    <targetTests>
                        <param>${project.groupId}.ut.*</param>
                    </targetTests>
                    <excludedClasses>
                        <param>${project.groupId}.model.Student</param>
                        <param>${project.groupId}.repository.mysql.ExamRepositoryMysql</param>
                        <param>${project.groupId}.repository.mysql.StudentRepositoryMysql</param>
                        <param>${project.groupId}.view.swing.*</param>
                    </excludedClasses>
                    <excludedTestClasses>
                        <param>${project.groupId}.ut.ViewTest</param>
                    </excludedTestClasses>
                    <excludedMethods>
                        <param>equals</param>
                        <param>hashCode</param>
                        <param>toString</param>
                        <param>get*</param>
                    </excludedMethods>
                    <mutators>
                        <mutator>DEFAULTS</mutator>
                    </mutators>
                </configuration>
            </plugin>

            <!--            <plugin>-->
            <!--                <groupId>io.fabric8</groupId>-->
            <!--                <artifactId>docker-maven-plugin</artifactId>-->
            <!--                <version>0.27.2</version>-->
            <!--                <configuration>-->
            <!--                    <images>-->
            <!--                        <image>-->
            <!--                            <name>mysql:5.7</name>-->
            <!--                            <run>-->
            <!--                                <wait>-->
            <!--                                    <log>mysqld: ready for connections</log>-->
            <!--                                    <time>20000</time>-->
            <!--                                </wait>-->
            <!--                                <env>-->
            <!--                                    <MYSQL_ALLOW_EMPTY_PASSWORD>1</MYSQL_ALLOW_EMPTY_PASSWORD>-->
            <!--                                    <MYSQL_DATABASE>attsw</MYSQL_DATABASE>-->
            <!--                                </env>-->
            <!--                                <ports>-->
            <!--                                    <port>3306:3306</port>-->
            <!--                                </ports>-->
            <!--                            </run>-->
            <!--                        </image>-->
            <!--                    </images>-->
            <!--                </configuration>-->
            <!--                <executions>-->
            <!--                    <execution>-->
            <!--                        <id>docker:start</id>-->
            <!--                        <phase>pre-integration-test</phase>-->
            <!--                        <goals>-->
            <!--                            <goal>start</goal>-->
            <!--                        </goals>-->
            <!--                    </execution>-->
            <!--                    <execution>-->
            <!--                        <id>docker:stop</id>-->
            <!--                        <phase>post-integration-test</phase>-->
            <!--                        <goals>-->
            <!--                            <goal>stop</goal>-->
            <!--                        </goals>-->
            <!--                    </execution>-->
            <!--                </executions>-->
            <!--            </plugin>-->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
            <plugins>
                <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.22.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
                <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.7.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
